import React, { useState } from 'react';
import './FAQ.css';

const FAQ = () => {
  const [openAccordion, setOpenAccordion] = useState(null);

  const toggleAccordion = (index) => {
    setOpenAccordion(openAccordion === index ? null : index);
  };

  return (
    <div className="faq">
      <h1><svg xmlns="http://www.w3.org/2000/svg" width="140" height="4" viewBox="0 0 140 4" fill="none">
<path d="M0 2H140" stroke="#222831" stroke-width="3"/>
</svg>FREQUENTLY ASKED QUESTIONS<svg xmlns="http://www.w3.org/2000/svg" width="140" height="4" viewBox="0 0 140 4" fill="none">
<path d="M0 2H140" stroke="#222831" stroke-width="3"/>
</svg></h1>
      <section className="faq-section">
        <div className="container">
          <div className="w-lg-50 mx-auto">
            <div className="accordion accordion-flush" id="accordionExample">
              
              {faqData.map((faq, index) => (
                <div className="accordion-item" key={index}>
                  <h2 className="accordion-header">
                    <button
                      className={`accordion-button ${openAccordion === index ? '' : 'collapsed'}`}
                      type="button"
                      onClick={() => toggleAccordion(index)}
                      aria-expanded={openAccordion === index}
                      aria-controls={`coll${index}`}
                    >
                      <h5>{faq.question}</h5>
                     
                    </button>
                  </h2>
                  <div
                    id={`coll${index}`}
                    className={`accordion-collapse collapse ${openAccordion === index ? 'show' : ''}`}
                    data-bs-parent="#accordionExample"
                  >
                    <div className="accordion-body">{faq.answer}</div>
                  </div>
                </div>
              ))}

            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

const faqData = [
  {
    question: 'What is RECs?',
    answer: 'Renewable Energy Certificates(RECs) are tradable certificates representing the environmental benefits associated with one megawatt-hour (MWh) of electricity generated by a renewable energy source.',
  },
  {
    question: 'Why are RECs bought?',
    answer: 'Renewable Energy Certificates(RECs) are purchased to achieve corporate sustainability goals, meet consumer demand for clean green energy options, reduce scope 2 emission and combat global climate change and environmental degradation.',
  },
  {
    question: 'How does SolarGAGA contribute?',
    answer: 'SolarGAGA strives to be an integrated network providing technological renewable energy solutions. Our platform enables advanced management, tracking, and system maintenance by collaborating with our partners on the ground. SolarGAGA also assists renewable energy system owners in claiming their RECs and supports companies and other entities in meeting their sustainability goals and reducing scope 2 emissions. By improving already installed systems, SolarGAGA plays a broader role in contributing to and assisting global renewable growth.',
  },
  {
    question: "What's the Difference between GAGA Portal and GAGA Exchange?",
    answer: 'The GAGA Exchange is where RECs which are registered and protected by us are listed. And where market buyers can approach us to meet their sustainability goals. While the GAGA Portal focuses on the improvement of existing renewable energy systems on the ground by managing, tracking and arranging due maintenance.',
  },
  {
    question: 'As a RECs Buyer, What can I use the GAGA Portal for?',
    answer: 'The GAGA Portal enables you to view your contribution by keeping track of the generation and its impact from the Renewable Energy Systems you have purchased RECs from. It also allows you to efficiently manage your renewable portfolio, access detailed reports for regulatory compliance and sustainability reporting, and monitor the performance and operational status of the renewable energy systems associated with your RECs.',
  },
];

export default FAQ;
